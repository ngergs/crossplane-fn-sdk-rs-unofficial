[package]
name = "crossplane-fn-sdk-rs-unofficial"
version = "0.1.0"
edition = "2024"
description = "A sdk to write Crossplane composite functions in Rust. Technically composite functions are basically gRPC server."
repository = "https://github.com/ngergs/crossplane-fn-sdk-rs-unofficial"
license = "MIT"
readme = "README.md"

[features]
default = ["k8s-openapi"]
k8s-openapi = ["dep:k8s-openapi"]
# exact k8s-openapi feature does not matter but we need to specify for one for building the binary codegen target
codegen = ["dep:tonic-prost-build", "dep:itertools", "dep:tempfile", "dep:reqwest", "k8s-openapi/v1_33"]

[lints.clippy]
pedantic = "warn"

[dependencies]
# IO
tonic = { version = "0.14.1", features = ["tls-aws-lc"] }
tokio = { version = "1.47.1", features = ["rt-multi-thread", "signal"] }
# Generated code from crossplane protobuf
prost = "0.14.1"
prost-types = "0.14.1"
prost-wkt-types = "0.7.0"
tonic-prost = "0.14.1"
serde = "1.0.219"
serde_json = "1.0.143"
# cli
clap = { version = "4.5.45", features = ["derive", "env"] }
# Logging
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["json"] }
# K8s
k8s-openapi = { version = "0.25.0", optional = true }
# Codegen
tonic-prost-build = { version = "0.14.1", features = ["cleanup-markdown"], optional = true }
itertools = { version = "0.14.0", optional = true }
tempfile = { version = "3.21.0", optional = true }
reqwest = { version = "0.12.23", optional = true }

[dev-dependencies]
k8s-openapi = { version = "0.25.0", features = ["v1_33"] }
tokio-test = { version = "0.4.4" }